pipeline:
  build:
    image: plugins/docker
    repo: kinvolk/microservices-demo-front-end
    secrets: [ docker_username, docker_password ]
    auto_tag: true
    auto_tag_suffix: drone
  start-k8s-cluster:
    group: k8s-setup
    network_mode: host
    image: albanc/drone-plugin-kube-spawn
    addr: "localhost:50051"
    setup: up
  get-kubectl:
    group: k8s-setup
    image: busybox
    commands:
      - sh -c 'wget https://storage.googleapis.com/kubernetes-release/release/v1.9.2/bin/linux/amd64/kubectl -O kubectl && chmod 0755 kubectl'
  test-k8s-cluster:
    image: ubuntu
    commands:
      - sh -c 'set -ex; while true; do notready=$(./kubectl --kubeconfig ./kubeconfig get nodes | grep NotReady || true); if [ -n "$notready" ] ; then echo "not ready yet"; sleep 3; else ./kubectl --kubeconfig ./kubeconfig get nodes; break; fi; done'
      - sh -c './kubectl --kubeconfig ./kubeconfig get nodes'
      - sh -c './kubectl --kubeconfig ./kubeconfig run front-end --image=kinvolk/microservices-demo-front-end:latest --replicas=1'
      - sh -c './kubectl --kubeconfig ./kubeconfig get pods'
      - sh -c 'for i in $(seq 1 10) ; do sleep 4 ; ./kubectl --kubeconfig ./kubeconfig get pods ; done'
  stop-k8s-cluster:
    network_mode: host
    image: albanc/drone-plugin-kube-spawn
    addr: "localhost:50051"
    setup: destroy
    when:
      status: [ failure, killed, success ]
